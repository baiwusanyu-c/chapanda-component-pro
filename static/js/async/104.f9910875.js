"use strict";(self.webpackChunk_chapanda_component_pro_docs=self.webpackChunk_chapanda_component_pro_docs||[]).push([["104"],{4729:function(e,n,a){a.r(n),a.d(n,{default:()=>M});var t=a(651),r=a(6971),l=a(9646),s=a(2379),o=a(7651),d=a.n(o);let c={0:"close",1:"running",2:"online",3:"error"},i=[],h=["付小小","曲丽丽","林东东","陈帅帅","兼某某"];for(let e=0;e<50;e+=1)i.push({key:e,name:"AppName",containers:Math.floor(20*Math.random()),creator:h[Math.floor(Math.random()*h.length)],status:c[Math.floor(10*Math.random())%4+""],createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*e,progress:Math.ceil(100*Math.random())+1,date:"2018-05-05",memo:e%2==1?"很长很长很长很长很长很长很长的文字要展示但是要留下尾巴":"简短备注文案"});let u=[{title:"应用名称",dataIndex:"name",searchType:"input",defaultSearchValue:"all",searchRenderIndex:5,filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"},{text:"Submenu",value:"Submenu",children:[{text:"Green",value:"Green"},{text:"Black",value:"Black"}]}],onFilter:(e,n)=>0===n.name.indexOf(e),sorter:(e,n)=>e.name.length-n.name.length,render:e=>(0,t.jsx)("a",{children:e})},{title:"创建者",dataIndex:"creator",searchIndex:"creatorCustom",searchType:"radio",defaultSearchValue:"all",searchLabelKey:"text",searchValueKey:"val",searchEnum:[{text:"全部",val:"all"},{text:"付小小",val:"fxx"}]},{title:"时间",dataIndex:"date",searchIndex:"date",searchType:"date-picker",defaultSearchValue:d()("2018-05-05"),formComponentProps:{picker:"week"}},{title:"状态",dataIndex:"status",searchType:"select",defaultSearchValue:"-1",searchEnum:[{value:"-1",key:"status-1",label:"全部"},{value:1,key:"status-2",label:"正常"},{value:0,key:"status-3",label:"冻结"},{value:2,key:"status-4",label:"锁定"},{value:3,key:"status-5",label:"限制登录"}]},{title:"备注",dataIndex:"memo",ellipsis:!0,searchType:"select",defaultSearchValue:["all"],formComponentProps:{allowClear:!0,maxTagCount:1,placeholder:"全部",mode:"multiple"},searchEnum:[{label:"全部",value:"all"},{label:"关闭",value:"Default"},{label:"运行中",value:"Processing"},{label:"已上线",value:"Success"},{label:"异常",value:"Error"}]},{title:"操作",width:180,key:"option",render:()=>[(0,t.jsx)("a",{children:"链路"},"link"),(0,t.jsx)("a",{children:"报警"},"link2"),(0,t.jsx)("a",{children:"监控"},"link3")]}];function m(){let[e]=(0,s.useState)({foo:"foo"});return(0,t.jsx)(l.vk,{params:e,columns:u,rowKey:"key",request:(e,n,a)=>(console.log(e,n,a),Promise.resolve({data:i,success:!0,total:50})),searchTitle:{title:"高级表格搜索"},tableTitle:{title:"高级表格"}})}var x=a(3817);let p={0:"close",1:"running",2:"online",3:"error"},j=[],y=["付小小","曲丽丽","林东东","陈帅帅","兼某某"];for(let e=0;e<50;e+=1)j.push({key:e,name:"AppName",containers:Math.floor(20*Math.random()),creator:y[Math.floor(Math.random()*y.length)],status:p[Math.floor(10*Math.random())%4+""],createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*e,progress:Math.ceil(100*Math.random())+1,date:"2018-05-05",memo:e%2==1?"很长很长很长很长很长很长很长的文字要展示但是要留下尾巴":"简短备注文案"});let f=[{title:"应用名称",dataIndex:"name",searchType:"input",defaultSearchValue:"all",searchRenderIndex:5,filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"},{text:"Submenu",value:"Submenu",children:[{text:"Green",value:"Green"},{text:"Black",value:"Black"}]}],onFilter:(e,n)=>0===n.name.indexOf(e),sorter:(e,n)=>e.name.length-n.name.length,render:e=>(0,t.jsx)("a",{children:e})},{title:"创建者",dataIndex:"creator",searchIndex:"creatorCustom",searchType:"radio",defaultSearchValue:"all",searchLabelKey:"text",searchValueKey:"val",searchEnum:[{text:"全部",val:"all"},{text:"付小小",val:"fxx"}]},{title:"时间",dataIndex:"date",searchIndex:"date",searchType:"date-picker",defaultSearchValue:d()("2018-05-05"),formComponentProps:{picker:"week"}},{title:"状态",dataIndex:"status",searchType:"select",defaultSearchValue:"-1",searchEnum:[{value:"-1",key:"status-1",label:"全部"},{value:1,key:"status-2",label:"正常"},{value:0,key:"status-3",label:"冻结"},{value:2,key:"status-4",label:"锁定"},{value:3,key:"status-5",label:"限制登录"}]},{title:"备注",dataIndex:"memo",ellipsis:!0,searchType:"select",defaultSearchValue:["all"],formComponentProps:{allowClear:!0,maxTagCount:1,placeholder:"全部",mode:"multiple"},searchEnum:[{label:"全部",value:"all"},{label:"关闭",value:"Default"},{label:"运行中",value:"Processing"},{label:"已上线",value:"Success"},{label:"异常",value:"Error"}]},{title:"操作",width:180,key:"option",render:()=>[(0,t.jsx)("a",{children:"链路"},"link"),(0,t.jsx)("a",{children:"报警"},"link2"),(0,t.jsx)("a",{children:"监控"},"link3")]}];function b(){let[e]=(0,s.useState)({foo:"foo"});return(0,t.jsx)(l.vk,{params:e,columns:f,rowKey:"key",request:(e,n,a)=>(console.log(e,n,a),Promise.resolve({data:j,success:!0,total:50})),searchTitle:{title:"面壁计划",tooltip:"面壁计划是由PDC制定的应对三体人的作战计划之一，利用人类无法被看穿的思想找到阻止三体入侵的方法的计划的总称"},tableTitle:{title:"面壁者-罗辑",tooltip:"清华大学社会学导师，宇宙社会学的创立者，黑暗森林法则的提出者，黑暗森林威慑的建立者"},toolBarRender:()=>[(0,t.jsx)(x.ZP,{type:"primary",onClick:()=>{alert("新增面壁者")},children:"新增面壁者"},"add-user"),(0,t.jsx)(x.ZP,{color:"danger",variant:"solid",onClick:()=>{alert("批量分配权限")},children:"批量分配权限"},"match-permission")]})}let k={0:"close",1:"running",2:"online",3:"error"},v=[],g=["付小小","曲丽丽","林东东","陈帅帅","兼某某"];for(let e=0;e<50;e+=1)v.push({key:e,name:"AppName",containers:Math.floor(20*Math.random()),creator:g[Math.floor(Math.random()*g.length)],status:k[Math.floor(10*Math.random())%4+""],createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*e,progress:Math.ceil(100*Math.random())+1,date:"2018-05-05",memo:e%2==1?"很长很长很长很长很长很长很长的文字要展示但是要留下尾巴":"简短备注文案"});let T=[{title:"应用名称",dataIndex:"name",searchType:"input",defaultSearchValue:"all",searchRenderIndex:5,filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"},{text:"Submenu",value:"Submenu",children:[{text:"Green",value:"Green"},{text:"Black",value:"Black"}]}],onFilter:(e,n)=>0===n.name.indexOf(e),sorter:(e,n)=>e.name.length-n.name.length,render:e=>(0,t.jsx)("a",{children:e})},{title:"创建者",dataIndex:"creator",searchIndex:"creatorCustom",searchType:"radio",defaultSearchValue:"all",searchLabelKey:"text",searchValueKey:"val",searchEnum:[{text:"全部",val:"all"},{text:"付小小",val:"fxx"}]},{title:"时间",dataIndex:"date",searchIndex:"date",searchType:"date-picker",defaultSearchValue:d()("2018-05-05"),formComponentProps:{picker:"week"}},{title:"状态",dataIndex:"status",searchType:"select",defaultSearchValue:"-1",searchEnum:[{value:"-1",key:"status-1",label:"全部"},{value:1,key:"status-2",label:"正常"},{value:0,key:"status-3",label:"冻结"},{value:2,key:"status-4",label:"锁定"},{value:3,key:"status-5",label:"限制登录"}]},{title:"备注",dataIndex:"memo",ellipsis:!0,searchType:"select",defaultSearchValue:["all"],formComponentProps:{allowClear:!0,maxTagCount:1,placeholder:"全部",mode:"multiple"},searchEnum:[{label:"全部",value:"all"},{label:"关闭",value:"Default"},{label:"运行中",value:"Processing"},{label:"已上线",value:"Success"},{label:"异常",value:"Error"}]},{title:"操作",width:180,key:"option",render:()=>[(0,t.jsx)("a",{children:"链路"},"link"),(0,t.jsx)("a",{children:"报警"},"link2"),(0,t.jsx)("a",{children:"监控"},"link3")]}];function P(){let[e,n]=(0,s.useState)({foo:"foo"}),{getFunc:a}=(0,s.useContext)(l.U);function r(){if(a){let e=a("tablePro");e&&e.search&&e.search()}}return(0,t.jsx)(l.vk,{params:e,columns:T,rowKey:"key",request:(e,n,a)=>(console.log(e,n,a),Promise.resolve({data:v,success:!0,total:50})),searchTitle:{title:"面壁计划",tooltip:"面壁计划是由PDC制定的应对三体人的作战计划之一，利用人类无法被看穿的思想找到阻止三体入侵的方法的计划的总称"},tableTitle:{title:"面壁者-罗辑",tooltip:"清华大学社会学导师，宇宙社会学的创立者，黑暗森林法则的提出者，黑暗森林威慑的建立者"},toolBarRender:()=>[(0,t.jsx)(x.ZP,{type:"primary",onClick:()=>{n({...e,foo:"change"})},children:"改变参数触发搜索"},"change-user"),(0,t.jsx)(x.ZP,{type:"primary",onClick:r,children:"手动搜索"},"search-user"),(0,t.jsx)(x.ZP,{type:"primary",onClick:()=>{alert("新增面壁者")},children:"新增面壁者"},"add-user"),(0,t.jsx)(x.ZP,{color:"danger",variant:"solid",onClick:()=>{alert("批量分配权限")},children:"批量分配权限"},"match-permission")]})}var C=a(4119);function S(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",h3:"h3",blockquote:"blockquote",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"chapandatablepro",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#chapandatablepro",children:"#"}),"ChaPandaTablePro"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ChaPandaTablePro"})," 是",(0,t.jsx)(n.code,{children:"chapanda component pro"})," 基于 ",(0,t.jsx)(n.code,{children:"antd"})," 的业务组件二次封装业务组件。"]}),"\n",(0,t.jsxs)(n.h2,{id:"样例",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#样例",children:"#"}),"样例"]}),"\n",(0,t.jsxs)(n.h3,{id:"基础使用",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基础使用",children:"#"}),"基础使用"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"打开开发者工具，可查看请求触发的参数打印"}),"\n"]}),"\n",(0,t.jsxs)(C.Z,{isMobile:"false",demoId:"_components_table_pro_1",children:[(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ChaPandaTablePro as ProTable } from '@chapanda/component-pro';\nimport type { ProColumns } from '@chapanda/component-pro'\nimport { useState} from \"react\";\n\nimport dayjs from 'dayjs'\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport type TableListItem = {\n  key: number;\n  name: string;\n  containers: number;\n  creator: string;\n  status: string;\n  createdAt: number;\n  progress: number;\n  money: number;\n  memo: string;\n  date: string,\n};\nconst tableListDataSource: TableListItem[] = [];\nconst creators = ['付小小', '曲丽丽', '林东东', '陈帅帅', '兼某某'];\nfor (let i = 0; i < 50; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: valueEnum[((Math.floor(Math.random() * 10) % 4) + '') as '0'],\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    date: '2018-05-05',\n    memo:\n      i % 2 === 1\n        ? '很长很长很长很长很长很长很长的文字要展示但是要留下尾巴'\n        : '简短备注文案',\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '应用名称',\n    dataIndex: 'name',\n    searchType: 'input',\n    defaultSearchValue: 'all',\n    searchRenderIndex: 5,\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'Jim',\n        value: 'Jim',\n      },\n      {\n        text: 'Submenu',\n        value: 'Submenu',\n        children: [\n          {\n            text: 'Green',\n            value: 'Green',\n          },\n          {\n            text: 'Black',\n            value: 'Black',\n          },\n        ],\n      },\n    ],\n    onFilter: (value, record) => record.name.indexOf(value as string) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    render: (_) => <a>{_}</a>,\n  },\n\n  {\n    title: '创建者',\n    dataIndex: 'creator',\n    searchIndex: 'creatorCustom',\n    searchType: 'radio',\n    defaultSearchValue: 'all',\n    searchLabelKey: 'text',\n    searchValueKey: 'val',\n    searchEnum: [\n      { text: '全部', val: 'all' },\n      { text: '付小小', val: 'fxx'},\n    ]\n  },\n  {\n    title: '时间',\n    dataIndex: 'date',\n    searchIndex: 'date',\n    searchType: 'date-picker',\n    defaultSearchValue: dayjs('2018-05-05'),\n    formComponentProps: {\n      picker: \"week\"\n    },\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    searchType: 'select',\n    defaultSearchValue: '-1',\n    searchEnum: [\n      { value: \"-1\", key: \"status-1\", label: \"全部\" },\n      { value: 1, key: \"status-2\", label: \"正常\" },\n      { value: 0, key: \"status-3\", label: \"冻结\" },\n      { value: 2, key: \"status-4\", label: \"锁定\" },\n      { value: 3, key: \"status-5\", label: \"限制登录\" },\n    ],\n  },\n  {\n    title: '备注',\n    dataIndex: 'memo',\n    ellipsis: true,\n    searchType: 'select',\n    defaultSearchValue: ['all'],\n    formComponentProps: {\n      allowClear: true,\n      maxTagCount: 1,\n      placeholder: '全部',\n      mode: \"multiple\"\n    },\n    searchEnum: [\n      { label: '全部', value: 'all' },\n      { label: '关闭', value: 'Default' },\n      { label: '运行中', value: 'Processing' },\n      { label: '已上线', value: 'Success' },\n      { label: '异常', value: 'Error' },\n    ]\n  },\n  {\n    title: '操作',\n    width: 180,\n    key: 'option',\n    render: () => [\n      <a key=\"link\">链路</a>,\n      <a key=\"link2\">报警</a>,\n      <a key=\"link3\">监控</a>,\n    ],\n  },\n];\n\nexport default function RenderTablePro() {\n  const [params] = useState({\n    foo: 'foo'\n  });\n  return <ProTable<TableListItem>\n      params={params}\n      columns={columns}\n      rowKey=\"key\"\n      request={(params, sorter, filter) => {\n        // 表单搜索项会从 params 传入，传递给后端接口。\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n          total: 50\n        });\n      }}\n      searchTitle={{\n        title: '高级表格搜索',\n      }}\n      tableTitle={{\n        title: '高级表格',\n      }}\n    />\n}\n"})})}),(0,t.jsx)(m,{})]}),"\n",(0,t.jsxs)(n.h3,{id:"操作选区与标题悬浮",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#操作选区与标题悬浮",children:"#"}),"操作选区与标题悬浮"]}),"\n",(0,t.jsxs)(n.p,{children:["通过 ",(0,t.jsx)(n.code,{children:"toolBarRender"})," 属性可以添加操作按钮，",(0,t.jsx)(n.code,{children:"tableTitle"})," 与 ",(0,t.jsx)(n.code,{children:"searchTitle"})," 可以开启附加说明悬浮提示。"]}),"\n",(0,t.jsxs)(C.Z,{isMobile:"false",demoId:"_components_table_pro_2",children:[(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ChaPandaTablePro as ProTable } from '@chapanda/component-pro';\nimport type { ProColumns } from '@chapanda/component-pro'\nimport { useState} from \"react\";\nimport { Button } from 'antd'\n\nimport dayjs from 'dayjs'\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport type TableListItem = {\n  key: number;\n  name: string;\n  containers: number;\n  creator: string;\n  status: string;\n  createdAt: number;\n  progress: number;\n  money: number;\n  memo: string;\n  date: string,\n};\nconst tableListDataSource: TableListItem[] = [];\nconst creators = ['付小小', '曲丽丽', '林东东', '陈帅帅', '兼某某'];\nfor (let i = 0; i < 50; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: valueEnum[((Math.floor(Math.random() * 10) % 4) + '') as '0'],\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    date: '2018-05-05',\n    memo:\n      i % 2 === 1\n        ? '很长很长很长很长很长很长很长的文字要展示但是要留下尾巴'\n        : '简短备注文案',\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '应用名称',\n    dataIndex: 'name',\n    searchType: 'input',\n    defaultSearchValue: 'all',\n    searchRenderIndex: 5,\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'Jim',\n        value: 'Jim',\n      },\n      {\n        text: 'Submenu',\n        value: 'Submenu',\n        children: [\n          {\n            text: 'Green',\n            value: 'Green',\n          },\n          {\n            text: 'Black',\n            value: 'Black',\n          },\n        ],\n      },\n    ],\n    onFilter: (value, record) => record.name.indexOf(value as string) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    render: (_) => <a>{_}</a>,\n  },\n\n  {\n    title: '创建者',\n    dataIndex: 'creator',\n    searchIndex: 'creatorCustom',\n    searchType: 'radio',\n    defaultSearchValue: 'all',\n    searchLabelKey: 'text',\n    searchValueKey: 'val',\n    searchEnum: [\n      { text: '全部', val: 'all' },\n      { text: '付小小', val: 'fxx'},\n    ]\n  },\n  {\n    title: '时间',\n    dataIndex: 'date',\n    searchIndex: 'date',\n    searchType: 'date-picker',\n    defaultSearchValue: dayjs('2018-05-05'),\n    formComponentProps: {\n      picker: \"week\"\n    },\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    searchType: 'select',\n    defaultSearchValue: '-1',\n    searchEnum: [\n      { value: \"-1\", key: \"status-1\", label: \"全部\" },\n      { value: 1, key: \"status-2\", label: \"正常\" },\n      { value: 0, key: \"status-3\", label: \"冻结\" },\n      { value: 2, key: \"status-4\", label: \"锁定\" },\n      { value: 3, key: \"status-5\", label: \"限制登录\" },\n    ],\n  },\n  {\n    title: '备注',\n    dataIndex: 'memo',\n    ellipsis: true,\n    searchType: 'select',\n    defaultSearchValue: ['all'],\n    formComponentProps: {\n      allowClear: true,\n      maxTagCount: 1,\n      placeholder: '全部',\n      mode: \"multiple\"\n    },\n    searchEnum: [\n      { label: '全部', value: 'all' },\n      { label: '关闭', value: 'Default' },\n      { label: '运行中', value: 'Processing' },\n      { label: '已上线', value: 'Success' },\n      { label: '异常', value: 'Error' },\n    ]\n  },\n  {\n    title: '操作',\n    width: 180,\n    key: 'option',\n    render: () => [\n      <a key=\"link\">链路</a>,\n      <a key=\"link2\">报警</a>,\n      <a key=\"link3\">监控</a>,\n    ],\n  },\n];\n\nexport default function RenderTablePro() {\n  const [params] = useState({\n    foo: 'foo'\n  });\n  return <ProTable<TableListItem>\n      params={params}\n      columns={columns}\n      rowKey=\"key\"\n      request={(params, sorter, filter) => {\n        // 表单搜索项会从 params 传入，传递给后端接口。\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n          total: 50\n        });\n      }}\n      searchTitle={{\n        title: '面壁计划',\n        tooltip: '面壁计划是由PDC制定的应对三体人的作战计划之一，利用人类无法被看穿的思想找到阻止三体入侵的方法的计划的总称'\n      }}\n      tableTitle={{\n        title: '面壁者-罗辑',\n        tooltip: '清华大学社会学导师，宇宙社会学的创立者，黑暗森林法则的提出者，黑暗森林威慑的建立者'\n      }}\n      toolBarRender={() => [\n        <Button\n          type=\"primary\"\n          key=\"add-user\"\n          onClick={() => {\n            alert('新增面壁者')\n          }}\n        >\n          新增面壁者\n        </Button>,\n        <Button\n          color=\"danger\"\n          variant=\"solid\"\n          key=\"match-permission\"\n          onClick={() => {\n            alert('批量分配权限')\n          }}\n        >\n          批量分配权限\n        </Button>,\n      ]}\n    />\n}\n"})})}),(0,t.jsx)(b,{})]}),"\n",(0,t.jsxs)(n.h3,{id:"手动触发请求",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#手动触发请求",children:"#"}),"手动触发请求"]}),"\n",(0,t.jsxs)(n.p,{children:["通过使用上下文对象，可以直接调用 ",(0,t.jsx)(n.code,{children:"search"})," 方法手动触发请求。"]}),"\n",(0,t.jsxs)(C.Z,{isMobile:"false",demoId:"_components_table_pro_3",children:[(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { ChaPandaTablePro as ProTable,ChapandaContext } from '@chapanda/component-pro';\nimport type { ProColumns } from '@chapanda/component-pro'\nimport { useState, useContext } from \"react\";\nimport { Button } from 'antd'\n\nimport dayjs from 'dayjs'\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport type TableListItem = {\n  key: number;\n  name: string;\n  containers: number;\n  creator: string;\n  status: string;\n  createdAt: number;\n  progress: number;\n  money: number;\n  memo: string;\n  date: string,\n};\nconst tableListDataSource: TableListItem[] = [];\nconst creators = ['付小小', '曲丽丽', '林东东', '陈帅帅', '兼某某'];\nfor (let i = 0; i < 50; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: valueEnum[((Math.floor(Math.random() * 10) % 4) + '') as '0'],\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    date: '2018-05-05',\n    memo:\n      i % 2 === 1\n        ? '很长很长很长很长很长很长很长的文字要展示但是要留下尾巴'\n        : '简短备注文案',\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '应用名称',\n    dataIndex: 'name',\n    searchType: 'input',\n    defaultSearchValue: 'all',\n    searchRenderIndex: 5,\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'Jim',\n        value: 'Jim',\n      },\n      {\n        text: 'Submenu',\n        value: 'Submenu',\n        children: [\n          {\n            text: 'Green',\n            value: 'Green',\n          },\n          {\n            text: 'Black',\n            value: 'Black',\n          },\n        ],\n      },\n    ],\n    onFilter: (value, record) => record.name.indexOf(value as string) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    render: (_) => <a>{_}</a>,\n  },\n\n  {\n    title: '创建者',\n    dataIndex: 'creator',\n    searchIndex: 'creatorCustom',\n    searchType: 'radio',\n    defaultSearchValue: 'all',\n    searchLabelKey: 'text',\n    searchValueKey: 'val',\n    searchEnum: [\n      { text: '全部', val: 'all' },\n      { text: '付小小', val: 'fxx'},\n    ]\n  },\n  {\n    title: '时间',\n    dataIndex: 'date',\n    searchIndex: 'date',\n    searchType: 'date-picker',\n    defaultSearchValue: dayjs('2018-05-05'),\n    formComponentProps: {\n      picker: \"week\"\n    },\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    searchType: 'select',\n    defaultSearchValue: '-1',\n    searchEnum: [\n      { value: \"-1\", key: \"status-1\", label: \"全部\" },\n      { value: 1, key: \"status-2\", label: \"正常\" },\n      { value: 0, key: \"status-3\", label: \"冻结\" },\n      { value: 2, key: \"status-4\", label: \"锁定\" },\n      { value: 3, key: \"status-5\", label: \"限制登录\" },\n    ],\n  },\n  {\n    title: '备注',\n    dataIndex: 'memo',\n    ellipsis: true,\n    searchType: 'select',\n    defaultSearchValue: ['all'],\n    formComponentProps: {\n      allowClear: true,\n      maxTagCount: 1,\n      placeholder: '全部',\n      mode: \"multiple\"\n    },\n    searchEnum: [\n      { label: '全部', value: 'all' },\n      { label: '关闭', value: 'Default' },\n      { label: '运行中', value: 'Processing' },\n      { label: '已上线', value: 'Success' },\n      { label: '异常', value: 'Error' },\n    ]\n  },\n  {\n    title: '操作',\n    width: 180,\n    key: 'option',\n    render: () => [\n      <a key=\"link\">链路</a>,\n      <a key=\"link2\">报警</a>,\n      <a key=\"link3\">监控</a>,\n    ],\n  },\n];\n\nexport default function RenderTablePro() {\n  const [params, setParams] = useState({\n    foo: 'foo'\n  });\n\n  const { getFunc } = useContext(ChapandaContext);\n  function doSearch(){\n    if (getFunc) {\n      const searchFn = getFunc(\"tablePro\");\n      if (searchFn && searchFn.search) {\n        searchFn.search();\n      }\n    }\n  }\n  return <ProTable<TableListItem>\n      params={params}\n      columns={columns}\n      rowKey=\"key\"\n      request={(params, sorter, filter) => {\n        // 表单搜索项会从 params 传入，传递给后端接口。\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n          total: 50\n        });\n      }}\n      searchTitle={{\n        title: '面壁计划',\n        tooltip: '面壁计划是由PDC制定的应对三体人的作战计划之一，利用人类无法被看穿的思想找到阻止三体入侵的方法的计划的总称'\n      }}\n      tableTitle={{\n        title: '面壁者-罗辑',\n        tooltip: '清华大学社会学导师，宇宙社会学的创立者，黑暗森林法则的提出者，黑暗森林威慑的建立者'\n      }}\n      toolBarRender={() => [\n        <Button\n          type=\"primary\"\n          key=\"change-user\"\n          onClick={() => {\n            setParams({...params, foo: 'change'})\n          }}>\n          改变参数触发搜索\n        </Button>,\n        <Button\n          type=\"primary\"\n          key=\"search-user\"\n          onClick={doSearch}>\n          手动搜索\n        </Button>,\n        <Button\n          type=\"primary\"\n          key=\"add-user\"\n          onClick={() => {\n            alert('新增面壁者')\n          }}\n        >\n          新增面壁者\n        </Button>,\n        <Button\n          color=\"danger\"\n          variant=\"solid\"\n          key=\"match-permission\"\n          onClick={() => {\n            alert('批量分配权限')\n          }}\n        >\n          批量分配权限\n        </Button>,\n      ]}\n    />\n}\n"})})}),(0,t.jsx)(P,{})]}),"\n",(0,t.jsxs)(n.h2,{id:"api",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#api",children:"#"}),"API"]}),"\n",(0,t.jsxs)(n.h3,{id:"props",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#props",children:"#"}),"Props"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"formType"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:'"form" | "table-head"'})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"form"})}),(0,t.jsxs)(n.td,{children:["标记搜索表单是独立的表单区，还是在表格头部(目前仅支持 ",(0,t.jsx)(n.code,{children:"form"}),")"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchTitle"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"{ title?: string; tooltip?: string; }"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:["查询表单区的 ",(0,t.jsx)(n.code,{children:"title"}),"，仅 ",(0,t.jsx)(n.code,{children:"formType"})," 为 ",(0,t.jsx)(n.code,{children:"form"})," 时有效"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"tableTitle"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"{ title?: string; tooltip?: string; }"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:["表格 ",(0,t.jsx)(n.code,{children:"title"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"request"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TableProRequest"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:["获取 ",(0,t.jsx)(n.code,{children:"dataSource"})," 的方法, ",(0,t.jsx)(n.code,{children:"sort"})," 和 ",(0,t.jsx)(n.code,{children:"filter"})," 来自 ",(0,t.jsx)(n.code,{children:"antd"})," ",(0,t.jsx)(n.code,{children:"table"})," 的 ",(0,t.jsx)(n.code,{children:"change"})," 事件，只有对应排序和搜索事件发生时才会传递"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"params"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"unknown"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsx)(n.td,{children:"request 的参数，修改之后会触发更新"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"toolBarRender"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"() => React.ReactNode[]"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsx)(n.td,{children:"搜索操作按钮区渲染函数"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"columns"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ProColumns[]"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsx)(n.td,{children:"列配置项"})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import type { FilterValue, SorterResult } from "antd/es/table/interface";\n\nexport type RequestData<T> = {\n	data: T[] | undefined;\n	success?: boolean;\n	total?: number;\n} & Record<string, any>;\n\n declare type TableProRequest<U, DataSource> =  (\n		params: U & {\n			pageSize?: number;\n			current?: number;\n			[key: string]: any;\n		},\n		sort?: SorterResult<DataSource> | SorterResult<DataSource>[],\n		filter?: Record<string, FilterValue | null>,\n	) => Promise<Partial<RequestData<DataSource>>>\n\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"procolumns",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#procolumns",children:"#"}),"ProColumns"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ChaPandaTablePro"})," 基于 ",(0,t.jsx)(n.code,{children:"antd"})," 的 ",(0,t.jsx)(n.code,{children:"table"})," 组件的 ",(0,t.jsx)(n.code,{children:"Column"})," 进行了扩展，以下仅列出扩展的属性。"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchType"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:'"input" | "select" | "date-picker" | "radio"'})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsx)(n.td,{children:"列是否开启搜索表单，目前支持有限的表单"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchIndex"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"列"}),"处于搜索表单时，其具体的字段参数，默认取 ",(0,t.jsx)(n.code,{children:"dataIndex"})," 值"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchRenderIndex"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"列"}),"处于搜索表单时, 渲染的顺序"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchLabel"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"列"}),"处于搜索表单时，其具体的字段参数，默认取 ",(0,t.jsx)(n.code,{children:"title"}),"值"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchEnum"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Array<Record<string, any>>"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:["下拉枚举列表，当 ",(0,t.jsx)(n.code,{children:"searchType"})," 为 ",(0,t.jsx)(n.code,{children:"select"}),"、",(0,t.jsx)(n.code,{children:"radio"})," 时生效"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchLabelKey"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:["下拉枚举列表 ",(0,t.jsx)(n.code,{children:"label key"}),"，当 ",(0,t.jsx)(n.code,{children:"searchType"})," 为 ",(0,t.jsx)(n.code,{children:"select"}),"、",(0,t.jsx)(n.code,{children:"radio"})," 时生效, 默认使用 ",(0,t.jsx)(n.code,{children:"label"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"searchValueKey"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:["下拉枚举列表 ",(0,t.jsx)(n.code,{children:"value key"}),"，当 ",(0,t.jsx)(n.code,{children:"searchType"})," 为 ",(0,t.jsx)(n.code,{children:"select"}),"、",(0,t.jsx)(n.code,{children:"radio"})," 时生效, 默认使用 ",(0,t.jsx)(n.code,{children:"value"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"defaultSearchValue"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"any"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"列"}),"处于搜索表单时，对应的默认值"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"formComponentProps"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Record<string, any>"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-"})}),(0,t.jsx)(n.td,{children:"表单组件的 props，将直接传递给组件"})]})]})]}),"\n",(0,t.jsxs)(n.h3,{id:"context-api",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#context-api",children:"#"}),"Context API"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",meta:"jsx",children:'import type { FilterValue, SorterResult } from "antd/es/table/interface";\n\nexport interface ChapandaTableFns {\n    /**\n      * 搜索方法\n      * @param sParams - 搜索参数\n      * @param filters - 过滤参数\n      * @param sorter - 排序参数\n     */\n	search?: <dataSourceT extends Record<string, any>>(\n		sParams?: Record<string, any>,\n		filters?: Record<string, FilterValue | null>,\n		sorter?: SorterResult<dataSourceT> | SorterResult<dataSourceT>[],\n	) => void;\n    /**\n      * 获取搜索参数\n      * @return sParams - 搜索参数\n      * @return filters - 过滤参数\n      * @return sorter - 排序参数\n     */\n	getSearchParams?: <dataSourceT extends Record<string, any>>() => {\n		params: Record<string, any>;\n		filters: Record<string, FilterValue | null>;\n		sorter: SorterResult<dataSourceT> | SorterResult<dataSourceT>[];\n	};\n     /**\n      * 获取搜索区搜索参数，它不包含过滤参数和排序参数\n      * @return sParams - 搜索参数\n     */\n	getFormFilterParams?: () =>  Record<string, any>;\n	[key: string]: any;\n}\n\nexport type IChapandaCompProCtxKeys = "tablePro";\nexport interface IChapandaCompProCtx {\n	tablePro?: ChapandaTableFns;\n}\n\nexport type UncertainFunction<T = any> = (...arg: any[]) => T | undefined;\nexport interface IChapandaContext {\n	expose:\n		| null\n		| ((\n				scope: IChapandaCompProCtxKeys,\n				name: keyof ChapandaTableFns,\n				fn: UncertainFunction | null,\n		  ) => void);\n	getFunc:\n		| null\n		| ((\n				scope: IChapandaCompProCtxKeys,\n		  ) => IChapandaCompProCtx[IChapandaCompProCtxKeys]);\n}\n\n'})})]})}function I(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(S,e)})):S(e)}let M=I;I.__RSPRESS_PAGE_META={},I.__RSPRESS_PAGE_META["components%2Ftable-pro.mdx"]={toc:[{id:"样例",text:"样例",depth:2},{id:"基础使用",text:"基础使用",depth:3},{id:"操作选区与标题悬浮",text:"操作选区与标题悬浮",depth:3},{id:"手动触发请求",text:"手动触发请求",depth:3},{id:"api",text:"API",depth:2},{id:"props",text:"Props",depth:3},{id:"procolumns",text:"ProColumns",depth:3},{id:"context-api",text:"Context API",depth:3}],title:"ChaPandaTablePro",headingTitle:"ChaPandaTablePro",frontmatter:{}}}}]);